sudo: required
language: bash
services:
- docker
install: true
before_install:
- openssl aes-256-cbc -K $encrypted_fcea255a9eb5_key -iv $encrypted_fcea255a9eb5_iv -in .stuff.tar.gz.enc -out stuff.tar.gz -d
- file stuff.tar.gz
- tar xzvf stuff.tar.gz -C /tmp/
- eval "$(ssh-agent -s)"
- chmod 600 /tmp/stuff/.deploy
- ssh-add /tmp/stuff/.deploy
- mv /tmp/stuff/.host ~/.ssh/config
- gem install travis
- echo "y" | sh /tmp/stuff/.travis_login
env:
- TASK_FULL="task-korora-xfce-live-x86_64"
script:
- sudo apt-get install tree -y
- TASK_RPM=$(echo $TASK_FULL | cut -d- -f1-4)
- TASK_NAME=$(echo $TASK_FULL | cut -d- -f3-5)
- ARCH=$(echo $TASK_FULL | cut -d- -f5)
- docker pull fedora:28
- export DID=$(docker images -a | grep -m1 fedora | awk '{print $3}')
- echo $DID
- docker run --hostname=Korora --privileged=true -d -v "$(pwd):/rpmbuild" -v "/dev:/dev" -v "/sys/fs/cgroup:/sys/fs/cgroup:ro" $DID tail -f /dev/null
- export CID=$(docker ps -l | awk '{print $1}' | grep -v -m1 'CONTAINER')
- echo $CID
- docker exec $CID /bin/sh -c 'dnf update --setopt=install_weak_deps=False -y &>> /rpmbuild/iso_build.log'
- docker exec $CID /bin/sh -c 'dnf install git pykickstart livecd-tools mock rsync file tar tree -y &>> /rpmbuild/iso_build.log'
- docker exec $CID /bin/sh -c 'cd /rpmbuild;git clone https://gitlab.com/korora/kp.git && cd ./kp && cp kp.conf.example kp.conf && ./kp init &>> /rpmbuild/iso_build.log'
- docker exec $CID /bin/sh -c 'sed -i "1050i\        time.sleep(60)" /usr/lib/python3.6/site-packages/imgcreate/fs.py  &>> /rpmbuild/iso_build.log'
- mkdir -p ${TASK_NAME}
- export LIVE_LOG=$(readlink -f ./*.log)
- if [ "$TRAVIS_TEST_RESULT" == "1" ]; then mv $LIVE_LOG ./${TASK_NAME}/FAILED_BUILD.log && rsync -arz --progress --rsh=ssh -e "ssh -o StrictHostKeyChecking=no" ./${TASK_NAME} foobar2:public_html/pub/korora/iso/; travis restart "$TRAVIS_JOB_NUMBER" -r jmiahman/buildxfce; exit 1; fi
- docker exec -d $CID /bin/sh -c 'cd /rpmbuild/kp;./kp release --release-version 28 --desktop XFCE korora-xfce |& tee -a /rpmbuild/iso_build.log'
- docker exec $CID /bin/sh -c 'while ps ax | grep kp | grep -v grep > /dev/null ; do sleep 60 ; export x="$(($x+1))" ; echo "--==|kp release has been running for $x minute(s)|==--" ; done'
- docker exec $CID /bin/sh -c 'rpm -qa &> /rpmbuild/rpm.list'
- export LIVE_ISO=$(find /home/travis -name "*.iso*" -print)
- tree /home/travis
- echo ${LIVE_ISO}
- export RPM_LIST=$(readlink -f ./rpm.list)
- mv $LIVE_ISO ./$TASK_NAME/${TASK_NAME}-$(date +%Y%m%d%H).iso
- mv $LIVE_LOG ./$TASK_NAME/${TASK_NAME}-$(date +%Y%m%d%H).log
- mv $RPM_LIST ./$TASK_NAME/${TASK_NAME}-$(date +%Y%m%d%H).rpmlist
- export NEW_ISO=$(readlink -f ./$TASK_NAME/*.iso)
- echo "$NEW_ISO"
- md5sum "$NEW_ISO" > ./$TASK_NAME/$(basename "$NEW_ISO").md5
- if [ "$TRAVIS_TEST_RESULT" == "1" ]; then rsync -arz --progress --rsh=ssh -e "ssh -o StrictHostKeyChecking=no" ./$TASK_NAME foobar2:public_html/pub/korora/iso/; fi
after_success:
- rsync -arz --progress --delete --rsh=ssh -e "ssh -o StrictHostKeyChecking=no" ./$TASK_NAME foobar2:public_html/pub/korora/iso/ &
- rsync -arz --progress --delete --rsh=ssh -e "ssh -o StrictHostKeyChecking=no" ./$TASK_NAME foobar:/var/www/html/isos/ &
- wait %1 %2
